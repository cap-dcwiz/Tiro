from sys import argv

from tiro.utils.scenario_generator import Asset, Point, GPTPointGenerator
from rich import print

root = Asset("DataCenter", "DC1")
root.load_room_from_dt("test/rack_20_acu_1_mixed.json")
root.load_room_from_dt("test/rack_16_acu_1_hot_mixed.json")
chiller_plant = root.add_asset("ChillerPlant", "CP1")
for i in range(1, 7):
    chiller_plant.add_asset("Chiller", f"CHILLER-{i}")
    chiller_plant.add_asset("CoolingTower", f"CT-{i}")
    chiller_plant.add_asset("ChilledWaterPump", f"CWP-{i}")
    chiller_plant.add_asset("CondenserWaterPump", f"CWP-{i}")

chiller_plant.add_asset("Pipe", f"CWS")
chiller_plant.add_asset("Pipe", f"CWR")
chiller_plant.add_asset("Pipe", f"CHWS")
chiller_plant.add_asset("Pipe", f"CHWR")
chiller_plant.add_asset("Pipe", f"Bypass 1")
chiller_plant.add_asset("Pipe", f"Bypass 2")

gpt_helper = GPTPointGenerator(root, token=argv[1], country="Singapore")
gpt_helper.add_path("PUE", "")
gpt_helper.add_path("DataHall.PUE", "")
gpt_helper.add_path("DataHall.Rack.TotalPower", "W")
gpt_helper.add_path("DataHall.Rack.Server.InletTemperature", "°C")
gpt_helper.add_path("DataHall.Rack.Server.OutletTemperature", "°C")
gpt_helper.add_path("DataHall.Sensor.Temperature", "°C")
gpt_helper.add_path("DataHall.Sensor.Humidity", "%")
gpt_helper.add_path("DataHall.ACU.ReturnAirTemperature", "°C")
gpt_helper.add_path("DataHall.ACU.ReturnAirVolumeFlowRate", "m3/s")
gpt_helper.add_path("ChillerPlant.Chiller.Power", "W")
gpt_helper.add_path("ChillerPlant.Chiller.ChilledWaterSupplyTemperature", "°C")
gpt_helper.add_path("ChillerPlant.Chiller.ChilledWaterReturnTemperature", "°C")
gpt_helper.add_path("ChillerPlant.Chiller.ChilledWaterFlowRate", "m3/s")
gpt_helper.add_path("ChillerPlant.Chiller.CondenserWaterSupplyTemperature", "°C")
gpt_helper.add_path("ChillerPlant.Chiller.CondenserWaterReturnTemperature", "°C")
gpt_helper.add_path("ChillerPlant.Chiller.CondenserWaterFlowRate", "m3/s")
gpt_helper.add_path("ChillerPlant.CoolingTower.Power", "W")
gpt_helper.add_path("ChillerPlant.CoolingTower.CoolingWaterSupplyTemperature", "°C")
gpt_helper.add_path("ChillerPlant.CoolingTower.CoolingWaterReturnTemperature", "°C")
gpt_helper.add_path("ChillerPlant.CoolingTower.CoolingWaterFlowRate", "m3/s")
gpt_helper.add_path("ChillerPlant.ChilledWaterPump.Power", "W")
gpt_helper.add_path("ChillerPlant.ChilledWaterPump.FlowRate", "m3/s")
gpt_helper.add_path("ChillerPlant.ChilledWaterPump.VSDSpeed", "Hz")
gpt_helper.add_path("ChillerPlant.CondenserWaterPump.Power", "W")
gpt_helper.add_path("ChillerPlant.CondenserWaterPump.FlowRate", "m3/s")
gpt_helper.add_path("ChillerPlant.CondenserWaterPump.VSDSpeed", "Hz")
gpt_helper.add_path("ChillerPlant.Pipe.Temperature", "°C")
gpt_helper.add_path("ChillerPlant.Pipe.FlowRate", "m3/s")
gpt_helper.add_path("ChillerPlant.Chiller.COP", "")
gpt_helper.add_path("ChillerPlant.COP", "")
gpt_helper.add_path("ChillerPlant.Chiller.CoolingCapacity", "W")
gpt_helper.complete_asset()


print(root.to_reference(as_yaml=True))
print(root.to_schema(as_yaml=True))
print(root.to_uses(as_yaml=True))
